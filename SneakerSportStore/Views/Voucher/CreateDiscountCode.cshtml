@model SneakerSportStore.Models.DiscountCode

@{
    ViewBag.Title = "Tạo Mã Giảm Giá";
    // Layout đã được chỉ định trong _ViewStart.cshtml nên không cần ở đây
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0 text-center">Tạo Mã Giảm Giá Mới</h2>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @using (Html.BeginForm("CreateDiscountCode", "Voucher", FormMethod.Post, new { @class = "voucher-form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            @Html.LabelFor(m => m.CodeName, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.CodeName, new
                            {
                                @class = "form-control",
                                placeholder = "Nhập mã giảm giá (VD: SUMMER20)",
                                required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.CodeName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.Condition, new { @class = "form-label fw-bold" })
                            @Html.TextAreaFor(m => m.Condition, new
                            {
                                @class = "form-control",
                                rows = "3",
                                placeholder = "Mô tả điều kiện áp dụng mã",
                                required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.Condition, "", new { @class = "text-danger" })
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Loại giảm giá</label>
                                <select name="DiscountType" class="form-select" required>
                                    <option value="">-- Chọn loại giảm giá --</option>
                                    <option value="Percentage">Giảm theo phần trăm (%)</option>
                                    <option value="Fixed">Giảm giá trực tiếp (VNĐ)</option>
                                </select>
                                @Html.ValidationMessageFor(m => m.DiscountType, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.DiscountValue, new { @class = "form-label fw-bold" })
                                @Html.TextBoxFor(m => m.DiscountValue, new
                                {
                                    @class = "form-control",
                                    type = "number",
                                    step = "0.01",
                                    min = "0.01",
                                    placeholder = "Giá trị giảm",
                                    required = "required"
                                })
                                @Html.ValidationMessageFor(m => m.DiscountValue, "", new { @class = "text-danger" })
                                <small class="form-text text-muted" id="discountValueHelp"></small>
                            </div>
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.MinimumOrderValue, new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text">VNĐ</span>
                                @Html.TextBoxFor(m => m.MinimumOrderValue, new
                                {
                                    @class = "form-control",
                                    type = "number",
                                    step = "1000",
                                    min = "0",
                                    placeholder = "Giá trị đơn hàng tối thiểu",
                                    required = "required"
                                })
                            </div>
                            @Html.ValidationMessageFor(m => m.MinimumOrderValue, "", new { @class = "text-danger" })
                            <small class="form-text text-muted">Áp dụng cho đơn hàng từ giá trị này</small>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.StartDate, new { @class = "form-label fw-bold" })
                                @Html.TextBoxFor(m => m.StartDate, "{0:yyyy-MM-ddTHH:mm}", new
                                {
                                    @class = "form-control",
                                    type = "datetime-local",
                                    required = "required"
                                })
                                @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.EndDate, new { @class = "form-label fw-bold" })
                                @Html.TextBoxFor(m => m.EndDate, "{0:yyyy-MM-ddTHH:mm}", new
                                {
                                    @class = "form-control",
                                    type = "datetime-local",
                                    required = "required"
                                })
                                @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3 form-check form-switch">
                            @Html.CheckBoxFor(m => m.IsPublic, new { @class = "form-check-input", role = "switch" })
                            <label class="form-check-label fw-bold">Hiển thị công khai</label>
                            <small class="form-text text-muted d-block">Hiển thị mã này cho người dùng thấy và lưu</small>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a href="@Url.Action("ManageDiscountCodes")" class="btn btn-secondary">
                                <i class="bi bi-arrow-left"></i> Quay lại
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-check-circle"></i> Tạo mã giảm giá
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Di chuyển toàn bộ CSS vào đây thay vì section Styles */
    .voucher-form {
        background-color: #f8f9fa;
        padding: 25px;
        border-radius: 10px;
        border: 1px solid #e0e0e0;
    }

    .card {
        border-radius: 15px;
        overflow: hidden;
        margin-top: 30px;
    }

    .card-header {
        padding: 20px 15px;
        font-size: 1.5rem;
    }

    .form-label {
        color: #2c3e50;
        margin-bottom: 8px;
    }

    .form-control, .form-select {
        border-radius: 8px;
        padding: 12px 15px;
        border: 1px solid #ced4da;
        transition: all 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
        }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
        padding: 10px 25px;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
            transform: translateY(-2px);
        }

    .btn-secondary {
        padding: 10px 25px;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .btn-secondary:hover {
            transform: translateY(-2px);
        }

    .alert {
        border-radius: 8px;
    }

    .input-group-text {
        background-color: #e9ecef;
        border-radius: 8px 0 0 8px;
    }

    .form-check-input:checked {
        background-color: #28a745;
        border-color: #28a745;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Cập nhật placeholder và hướng dẫn dựa trên loại giảm giá
            const discountTypeSelect = document.querySelector('select[name="DiscountType"]');
            const discountValueInput = document.querySelector('input[name="DiscountValue"]');
            const discountValueHelp = document.getElementById('discountValueHelp');

            function updateDiscountValueHelp() {
                const discountType = discountTypeSelect.value;

                if (discountType === 'Percentage') {
                    discountValueHelp.textContent = 'Nhập giá trị từ 1 đến 100 (VD: 20 cho 20%)';
                    discountValueInput.min = 1;
                    discountValueInput.max = 100;
                } else if (discountType === 'Fixed') {
                    discountValueHelp.textContent = 'Nhập số tiền giảm trực tiếp (VD: 50000)';
                    discountValueInput.removeAttribute('max');
                } else {
                    discountValueHelp.textContent = '';
                }
            }

            discountTypeSelect.addEventListener('change', updateDiscountValueHelp);
            updateDiscountValueHelp();

            // Kiểm tra ngày kết thúc phải sau ngày bắt đầu
            const form = document.querySelector('.voucher-form');
            form.addEventListener('submit', function (e) {
                const startDate = new Date(document.querySelector('input[name="StartDate"]').value);
                const endDate = new Date(document.querySelector('input[name="EndDate"]').value);

                if (startDate >= endDate) {
                    e.preventDefault();
                    alert('Ngày kết thúc phải sau ngày bắt đầu');
                }

                if (discountTypeSelect.value === 'Percentage') {
                    const discountValue = parseFloat(discountValueInput.value);
                    if (discountValue < 1 || discountValue > 100) {
                        e.preventDefault();
                        alert('Giá trị giảm giá theo phần trăm phải từ 1 đến 100');
                    }
                }
            });

            // Đặt giá trị mặc định cho ngày
            const now = new Date();
            const startDateInput = document.querySelector('input[name="StartDate"]');
            const endDateInput = document.querySelector('input[name="EndDate"]');

            if (!startDateInput.value) {
                startDateInput.value = now.toISOString().slice(0, 16);
            }

            if (!endDateInput.value) {
                const nextMonth = new Date(now);
                nextMonth.setMonth(nextMonth.getMonth() + 1);
                endDateInput.value = nextMonth.toISOString().slice(0, 16);
            }
        });
    </script>
}

@*@section Styles {
    <style>
        .voucher-form {
            background-color: #f8f9fa;
            padding: 25px;
            border-radius: 10px;
            border: 1px solid #e0e0e0;
        }

        .card {
            border-radius: 15px;
            overflow: hidden;
            margin-top: 30px;
        }

        .card-header {
            padding: 20px 15px;
            font-size: 1.5rem;
        }

        .form-label {
            color: #2c3e50;
            margin-bottom: 8px;
        }

        .form-control, .form-select {
            border-radius: 8px;
            padding: 12px 15px;
            border: 1px solid #ced4da;
            transition: all 0.3s ease;
        }

            .form-control:focus, .form-select:focus {
                border-color: #3498db;
                box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
            }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            padding: 10px 25px;
            font-weight: 600;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .btn-success:hover {
                background-color: #218838;
                border-color: #1e7e34;
                transform: translateY(-2px);
            }

        .btn-secondary {
            padding: 10px 25px;
            font-weight: 600;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .btn-secondary:hover {
                transform: translateY(-2px);
            }

        .alert {
            border-radius: 8px;
        }

        .input-group-text {
            background-color: #e9ecef;
            border-radius: 8px 0 0 8px;
        }

        .form-check-input:checked {
            background-color: #28a745;
            border-color: #28a745;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Cập nhật placeholder và hướng dẫn dựa trên loại giảm giá
            const discountTypeSelect = document.querySelector('select[name="DiscountType"]');
            const discountValueInput = document.querySelector('input[name="DiscountValue"]');
            const discountValueHelp = document.getElementById('discountValueHelp');

            function updateDiscountValueHelp() {
                const discountType = discountTypeSelect.value;

                if (discountType === 'Percentage') {
                    discountValueHelp.textContent = 'Nhập giá trị từ 1 đến 100 (VD: 20 cho 20%)';
                    discountValueInput.min = 1;
                    discountValueInput.max = 100;
                } else if (discountType === 'FixedAmount') {
                    discountValueHelp.textContent = 'Nhập số tiền giảm trực tiếp (VD: 50000)';
                    discountValueInput.removeAttribute('max');
                } else {
                    discountValueHelp.textContent = '';
                }
            }

            discountTypeSelect.addEventListener('change', updateDiscountValueHelp);
            updateDiscountValueHelp();

            // Kiểm tra ngày kết thúc phải sau ngày bắt đầu
            const form = document.querySelector('.voucher-form');
            form.addEventListener('submit', function (e) {
                const startDate = new Date(document.querySelector('input[name="StartDate"]').value);
                const endDate = new Date(document.querySelector('input[name="EndDate"]').value);

                if (startDate >= endDate) {
                    e.preventDefault();
                    alert('Ngày kết thúc phải sau ngày bắt đầu');
                }

                if (discountTypeSelect.value === 'Percentage') {
                    const discountValue = parseFloat(discountValueInput.value);
                    if (discountValue < 1 || discountValue > 100) {
                        e.preventDefault();
                        alert('Giá trị giảm giá theo phần trăm phải từ 1 đến 100');
                    }
                }
            });

            // Đặt giá trị mặc định cho ngày
            const now = new Date();
            const startDateInput = document.querySelector('input[name="StartDate"]');
            const endDateInput = document.querySelector('input[name="EndDate"]');

            if (!startDateInput.value) {
                startDateInput.value = now.toISOString().slice(0, 16);
            }

            if (!endDateInput.value) {
                const nextMonth = new Date(now);
                nextMonth.setMonth(nextMonth.getMonth() + 1);
                endDateInput.value = nextMonth.toISOString().slice(0, 16);
            }
        });
    </script>
}*@